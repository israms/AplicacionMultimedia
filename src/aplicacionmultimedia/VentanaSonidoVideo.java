/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * VentanaSonido.java
 *
 * Created on 23-feb-2012, 17:01:57
 */
package aplicacionmultimedia;

import java.awt.Component;
import javax.media.ControllerAdapter;
import javax.media.Manager;
import javax.media.MediaLocator;
import javax.media.Player;
import javax.media.RealizeCompleteEvent;

/**
 *
 * @author Usuario
 */
public class VentanaSonidoVideo extends javax.swing.JInternalFrame {
    private VentanaPrincipal creador=null;
    private Player p;
    
    /** Creates new form VentanaSonido */
    public VentanaSonidoVideo(VentanaPrincipal vp) {
        creador=vp;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/aplicacionmultimedia/iconos/icono-video.png"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(300, 350));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameDeactivated(evt);
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
    creador.desactivarOpcionGuardar();
}//GEN-LAST:event_formInternalFrameActivated

private void formInternalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameDeactivated
    creador.activarOpcionGuardar();
}//GEN-LAST:event_formInternalFrameDeactivated

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

public void iniciaReproduccion(String f){
        try {
            MediaLocator ml = new MediaLocator("file:"+f);
            p = Manager.createPlayer(ml);
            p.addControllerListener(new MiManejadorMedia());
            p.start();

        } catch(Exception e) {
            System.out.println("Error al abrir el archivo de audio");
        }
}

class MiManejadorMedia extends ControllerAdapter{
        public void realizeComplete(RealizeCompleteEvent e){
            Component areaVisual=p.getVisualComponent();
            if(areaVisual!=null){
                getContentPane().add(areaVisual, java.awt.BorderLayout.CENTER);
            }
            Component panelControl=p.getControlPanelComponent();
            if(panelControl!=null){
                getContentPane().add(panelControl, java.awt.BorderLayout.SOUTH);
            }
            pack();
        }

    }


}
